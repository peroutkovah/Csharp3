@using ToDoList.Frontend.Views
@using ToDoList.Frontend.Clients
@inject IToDoItemsClient ToDoItemsClient
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h1>Dashboard</h1>



<table class="table table-hover mt-5">
    <thead class="table-dark">
        <th>ID</th>
        <th>Jméno úkolu</th>
        <th>Kategorie</th>
        <th>Popis</th>
        <th>Splněný</th>
        <th>Editovat</th>
        <th>Smazat</th>
        <th>Úkol splněný</th>
    </thead>
    <tbody>
        @if (toDoItems is null)
        {
            <p>Nacitam...</p>
        }

        @if (toDoItems is not null)
        {
            @foreach (var toDoItem in toDoItems)
            {
                <tr class="@GetRowClass(toDoItem) @GetRowClass(toDoItem)">
                    <td>@toDoItem.ToDoItemId</td>
                    <td>@toDoItem.Name</td>
                    <td>@toDoItem.Category</td>
                    <td>@toDoItem.Description</td>
                    <td>@toDoItem.IsCompleted</td>
                    <td><button class="btn btn-success" @onclick="() => EditItem(toDoItem)">EDIT</button></td>
                    <td><button class="btn btn-danger" @onclick="() => DeleteItem(toDoItem)">SMAZAT</button></td>
                    <td><button class="btn btn-info" @onclick="() => ChangeToBeCompleted(toDoItem)">Změň splněnost</button></td>
                </tr>
            }
        }
    </tbody>
</table>
<h5>Seřaď úkoly podle: </h5>
<button class="btn btn-outline-primary" @onclick="SortItemsById">ID</button>
<button class="btn btn-outline-primary" @onclick="SortItemsByName">Jméno úkolu</button>

@code
{


    protected override async Task OnInitializedAsync()
    {
        toDoItems = await ToDoItemsClient.ReadItemsAsync();
    }

    private List<ToDoItemView>? toDoItems;

    private void SortItemsById()
    {
        toDoItems = toDoItems.OrderBy(item => item.ToDoItemId).ToList();
    }

    private void SortItemsByName()
    {
        toDoItems = toDoItems.OrderBy(item => item.Name).ToList();
    }


    /*vybarveni radku dlo toho, zda je ukol hotovy nebo ne*/
    private string GetRowColor(ToDoItemView toDoItemView)
    {
        return toDoItemView.IsCompleted ? "#000000" : "#FF6347";

    }

    private string GetRowClass(ToDoItemView toDoItemView)
    {
        return toDoItemView.IsCompleted ? "table-success" : "table-secondary";
    }

    public void EditItem(ToDoItemView toDoItem)
    {
        NavigationManager.NavigateTo($"editToDoItem/{toDoItem.ToDoItemId}");
    }

    public void DeleteItem(ToDoItemView toDoItem)
    {
       NavigationManager.NavigateTo($"deleteToDoItem/{toDoItem.ToDoItemId}");
       @* toDoItems.RemoveAll(item => item.ToDoItemId == toDoItem.ToDoItemId); *@

    }


    [Parameter]
    public int ItemId { get; set; }

    [SupplyParameterFromForm]
    public ToDoItemView ToDoItem { get; set; }
    public async Task  ChangeToBeCompleted(ToDoItemView toDoItem)
    {

        toDoItem.IsCompleted = !toDoItem.IsCompleted;

        await ToDoItemsClient.UpdateItemAsync(ToDoItem);

    }

}
